realm: training
enabled: true
displayName: "Keycloak Spring Training"

smtpServer:
  host: "mail"
  port: 1025
  from: "training@localhost"
  fromDisplayName: "Training Account"
  replyTo: "no-reply@acme.test"
  replyToDisplayName: "Training Support"

clientScopes:
  - name: training
    description: "Training Scope"
    protocol: openid-connect
    attributes:
      "include.in.token.scope": "true"
      "display.on.consent.screen": "true"
    protocolMappers:
      - name: "Training: Realm Roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-realm-role-mapper
        consentRequired: false
        config:
          claim.name: "realm_access.roles"
          id.token.claim: "true"
          userinfo.token.claim: "false"
          access.token.claim: "false"
          multivalued: "true"
      - name: "Training: Client Roles"
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          claim.name: "resource_access.${client_id}.roles"
          id.token.claim: "true"
          userinfo.token.claim: "false"
          access.token.claim: "false"
          multivalued: "true"

clients:
  - clientId: training-web
    protocol: openid-connect
    name: "Classic Spring Boot Web App"
    description: "Classic Spring Boot Web App with Authorization Code Grant Flow"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "secret"
    #    attributes: { }
    fullScopeAllowed: true
    rootUrl: "http://localhost:8080"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "/login/oauth2/code/keycloak"
      - "https://flowsimulator.pragmaticwebsecurity.com"
    defaultClientScopes:
      - "email"
      - "roles"
      - "profile"
      - "training"
    optionalClientScopes:
      - "phone"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "/*"

  - clientId: training-gateway
    protocol: openid-connect
    name: "Spring Cloud Gateway App"
    description: "Spring Cloud Gateway App with Authorization Code Grant Flow"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "secret"
    #    attributes: { }
    fullScopeAllowed: true
    rootUrl: "http://localhost:8050"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "/login/oauth2/code/keycloak"
      - "https://flowsimulator.pragmaticwebsecurity.com"
    defaultClientScopes:
      - "email"
      - "roles"
      - "profile"
      - "training"
    optionalClientScopes:
      - "phone"
    attributes:
      "post.logout.redirect.uris": "/*"

  - clientId: "training-cli"
    protocol: openid-connect
    name: "Client with Device Flow Grant"
    description: "Device Flow Grant Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    fullScopeAllowed: false
    attributes:
      #"use.refresh.tokens": "false"
      "use.refresh.tokens": "true"
      "oauth2.device.authorization.grant.enabled": "true"
    redirectUris: [ ]

  - clientId: training-bff
    protocol: openid-connect
    name: "BFF App Spring Boot"
    description: "BFF Spring Boot Description"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "$(env:ACME_APPS_APP_BFF_SPRINGBOOT_SECRET:-secret)"
    fullScopeAllowed: false
    rootUrl: "http://localhost:8070/bff"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: training-tests
    protocol: openid-connect
    name: "Client for Demos"
    description: ""
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: true
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "secret"
    #    attributes: { }
    fullScopeAllowed: true
    rootUrl: ""
    baseUrl: ""
    adminUrl: ""
    defaultClientScopes:
      - "email"
      - "roles"
      - "profile"
      - "training"
    optionalClientScopes:
      - "phone"

  - clientId: training-spa
    protocol: openid-connect
    name: "SPA Example App"
    description: "SPA Example App Description"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: true
    rootUrl: "http://localhost:9080/spa"
    baseUrl: "/?realm=training&show=profile,token,idToken,userinfo,updatepassword,account,logout"
    adminUrl: ""
    redirectUris:
      - "/*"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "roles"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "training"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

### example client configurations

  - clientId: acme-client-spa-app
    protocol: openid-connect
    name: Acme SPA Frontend App
    description: "JavaScript based Single-Page App as Public Client that uses Authorization Code Grant Flow"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    fullScopeAllowed: false
    rootUrl: "https://www.keycloak.org/app"
    baseUrl: "/#url=http://localhost:9090/auth&realm=training&client=acme-client-spa-app"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "https://flowsimulator.pragmaticwebsecurity.com"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

  - clientId: acme-client-cli-app
    protocol: openid-connect
    name: Acme CLI App
    description: "Command-line interface app that can obtain tokens with Username + Password and ClientId via grant_type=password"
    enabled: true
    publicClient: true
    standardFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
    attributes:
      "use.refresh.tokens": "false"

  - clientId: acme-client-classic-web-app
    protocol: openid-connect
    name: Acme Classic Server-side Web Application
    description: "Classic Server-side Web Application that uses Authorization Code Grant Flow"
    enabled: true
    publicClient: false
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    # Show client in account-console
    alwaysDisplayInConsole: true
    serviceAccountsEnabled: false
    secret: "$(env:ACME_APPS_APP_WEB_SPRINGBOOT_SECRET:-secret)"
    fullScopeAllowed: false
    rootUrl: "https://apps.acme.test:4633/webapp"
    baseUrl: "/"
    adminUrl: ""
    redirectUris:
      - "/*"
      - "https://flowsimulator.pragmaticwebsecurity.com"
    webOrigins:
      - "+"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

  - clientId: acme-client-legacy-app
    protocol: openid-connect
    name: Acme Legacy App
    description: "Legacy App that can obtain tokens with Username + Password and ClientId+Secret via grant_type=password"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: true
    serviceAccountsEnabled: false
    secret: "$(env:ACME_CLIENT_EXAMPLES_CLIENT_SECRET:-secret)"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: acme-client-api-resource-server
    protocol: openid-connect
    name: Acme API Resource Server
    description: "OAuth2 Resource Server that can be called with an AccessToken, can be used to provide Role configuration for an API"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false

  - clientId: acme-client-api-resource-server2
    protocol: openid-connect
    name: Acme API Resource Server 2
    description: "OAuth2 Resource Server that can be called with an AccessToken, can be used to provide Role configuration for an API"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false


  - clientId: acme-client-service-app
    protocol: openid-connect
    name: Acme Service App
    description: "Acme Service App that can obtain tokens via grant_type=client_credentials"
    enabled: true
    publicClient: false
    standardFlowEnabled: false
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: true
    secret: "$(env:ACME_CLIENT_EXAMPLES_CLIENT_SECRET:-secret)"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"

  - clientId: acme-client-mobile-app
    protocol: openid-connect
    name: Acme Mobile App
    description: "Acme Mobile App with Authorization Code Flow"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    #    attributes: { }
    fullScopeAllowed: false
    redirectUris:
      # App URL
      - "acme://app/callback/*"
      # Claimed URL
      - "https://mobile.acme.test/*"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "offline_access"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

  - clientId: acme-client-desktop-app
    protocol: openid-connect
    name: Acme Desktop App
    description: "Acme Desktop App with Authorization Code Flow"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    fullScopeAllowed: false
    redirectUris:
      - "http://localhost/*"
    defaultClientScopes:
      - "email"
      - "profile"
    optionalClientScopes:
      - "phone"
      - "offline_access"
    attributes:
      "pkce.code.challenge.method": "S256"
      "post.logout.redirect.uris": "+"

  - clientId: acme-client-spa-app-implicit
    protocol: openid-connect
    name: Client with Implicit Grant
    description: "Implicit Client Description v2"
    enabled: true
    publicClient: true
    standardFlowEnabled: true
    implicitFlowEnabled: true
    directAccessGrantsEnabled: false
    serviceAccountsEnabled: false
    fullScopeAllowed: false
    redirectUris:
      - "http://localhost/acme-implcit-client/oauth/callback"

roles:
  # Realm specific roles
  realm:
    - name: "user"
      description: "User"

    - name: "admin"
      description: "Admin"

    - name: "support"
      description: "Support"

users:
  - username: user
    email: user@local
    firstName: Theo
    lastName: Tester
    enabled: true
    emailVerified: true
    attributes:
      locale: [ "en" ]
      salutation: [ "mr" ]
      phoneNumber: "+49123456789"
    credentials:
      - type: password
        userLabel: initial
        value: user
        temporary: false
    realmRoles:
      - "user"

  - username: admin
    email: admin@local
    firstName: Arno
    lastName: Admin
    enabled: true
    emailVerified: true
    attributes:
      locale: [ "en" ]
      salutation: [ "mr" ]
      phoneNumber: "+49123456789"
    credentials:
      - type: password
        userLabel: initial
        value: admin
        temporary: false
    realmRoles:
      - "admin"
      - "user"

  - username: support
    email: support@local
    firstName: Susi
    lastName: Support
    enabled: true
    emailVerified: true
    attributes:
      locale: [ "en" ]
      salutation: [ "ms" ]
    credentials:
      - type: password
        userLabel: initial
        value: support
        temporary: false
    realmRoles:
      - "user"
      - "support"

#